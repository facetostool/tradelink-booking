version: '3'

services:
  postgres:
    image: 'postgres:latest'
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    networks:
      - base

  redis:
    image: 'redis:alpine'
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis:/data
    networks:
      - base

  app:
    depends_on:
      - 'postgres'
      - 'redis'
    build: .
    ports:
      - '3000:3000'
    volumes:
      - '.:/app'
    environment:
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_HOST=${DATABASE_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT}
      - REDIS_URL=${REDIS_URL}
      - RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES}
    networks:
      - base

#  sidekiq:
#    depends_on:
#      - 'postgres'
#      - 'redis'
#    build: .
#    command: bundle exec sidekiq
#    environment:
#      - DATABASE_USERNAME=${DATABASE_USERNAME}
#      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
#      - DATABASE_NAME=${DATABASE_NAME}
#      - DATABASE_HOST=${DATABASE_HOST}
#      - REDIS_PASSWORD=${REDIS_PASSWORD}
#      - RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT}
#      - REDIS_HOST=${REDIS_HOST}
#      - REDIS_PORT=${REDIS_PORT}
#      - REDIS_DB=${REDIS_DB}
#    volumes:
#      - .:/app
#    networks:
#      - base

volumes:
  redis:
  postgres:

networks:
  base:
    driver: bridge